#! /usr/bin/env python3

import random
import argparse

#instantiate argument parser
parser = argparse.ArgumentParser(
        description="Generate a secure, memorable password using the XKCD method")

#adds argument variables
parser.add_argument("-w","--words",type=int, default=4,
                    help='include WORDS words in the password (default=4)')

parser.add_argument("-c", "--caps", type=int, default=0,
                    help='capitalize the first letter of CAPS random words (default=0)')

parser.add_argument("-n", "--numbers", type=int, default=0,
                    help='insert NUMBERS random numbers in the password (default=0)')

parser.add_argument("-s", "--symbols", type=int, default=0,
                    help='insert SYMBOLS random symbols in the password (default=0)')

args = parser.parse_args()


#initialize password
password = []

#list of words available
def loWords():
    return open("words.txt").read().split()

while args.words > 0:
    #deals with capitalization with the amount of words in the password
    if 0 < args.caps < args.words:
        password.append(random.choice(loWords()).capitalize())
        args.caps -= 1
        args.words -= 1
    else:
        password.append(random.choice(loWords()))
        args.words -= 1

#deals with adding random symbols in the password
for sym in range(args.symbols):
    password.append(random.choice(["~", "!", "@", "#", "$", "%", "^", "&", "*",".", ":", ";"]))

#deals with adding random numbbers in the password
for num in range(args.numbers):
    password.append(random.choice(["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"]))

random.shuffle(password)

print("".join(password))

